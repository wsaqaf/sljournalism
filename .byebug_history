skip
@claim_review.blockchain_tx
@claim_review
@claim_review.dump
next
skip
output
next
cmnd
next
argmnt
next
skip
Shellwords.escape(@claim.expiry_date.to_s[0...-7]).gsub("''","")
Shellwords.escape(@claim.expiry_date.to_s[0...-7])
@claim.expiry_date.to_s[0...-7]
argmnt
next
exit
ENV['CORE_PEER_ADDRES']
ENV['CORE_PEER_ADDRES']=""
ENV['CORE_PEER_ADDRESS']
ENV['CORE_PEER_TLS_ROOTCERT_FILE']
ENV['CORE_PEER_LOCALMSPID']
ENV['CORE_PEER_TLS_ENABLED']
ENV['CORE_PEER_MSPCONFIGPATH']
output=%x(/Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/bin/peer chaincode query -C mychannel -n factcheck -c '{"Args":["queryRecords","{\"selector\":{\"docType\":\"wallet\",\"ownerIDInOrg\":\"50\",\"orgID\":\"org1\"},\"fields\":[\"balance\"]}"]}')
output= %x(/Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n factcheck --peerAddresses localhost:7051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"Args":["registerWallet","factchecker","org1","58", "factchecker6"]}' --waitForEvent 2>&1)
peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n factcheck --peerAddresses localhost:7051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"Args":["registerWallet","factchecker","org1","58", "factchecker6"]}' --waitForEvent 2>&1
output=%x(/Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/bin/peer chaincode query -C mychannel -n factcheck -c '{"Args":["queryRecords","{\"selector\":{\"docType\":\"wallet\",\"ownerIDInOrg\":\"50\",\"orgID\":\"org1\"},\"fields\":[\"balance\"]}"]}')
output=%x(/Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/bin/peer chaincode query -C mychannel -n factcheck -c '{"Args":["queryRecords","{\"selector\":{\"docType\":\"wallet\",\"ownerIDInOrg\":\"50\",\"orgID\":\"org1\"},\"fields\":[\"balance\"]}"]}'
skip
output
output= `/Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n factcheck --peerAddresses localhost:7051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"Args":["registerWallet","client","org1","50", "client2"]}' --waitForEvent 2>&1`
output= `/Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n factcheck --peerAddresses localhost:7051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"Args":["registerWallet","client","org1","50", "client2"]}' --waitForEvent &>`
output
output= `/Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/bin/peer`
output
output= `/Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n factcheck --peerAddresses localhost:7051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"Args":["registerWallet","client","org1","50", "client2"]}' --waitForEvent`
output
output=%x( /Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n factcheck --peerAddresses localhost:7051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"Args":["registerWallet","client","org1","50", "client2"]}' --waitForEvent )
%x( /Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/bin/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n factcheck --peerAddresses localhost:7051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"Args":["registerWallet","client","org1","50", "client2"]}' --waitForEvent )
%x( /Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n factcheck --peerAddresses localhost:7051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"Args":["registerWallet","client","org1","50", "client2"]}' --waitForEvent )
%x( ls )
%x ( ls )
%x ( /Users/walid/desktop/sh/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n factcheck --peerAddresses localhost:7051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"Args":["registerWallet","client","org1","50", "client2"]}' --waitForEvent )
%x ( peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n factcheck --peerAddresses localhost:7051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"Args":["registerWallet","client","org1","50", "client2"]}' --waitForEvent )
%x (peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n factcheck --peerAddresses localhost:7051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles /Users/walid/Desktop/SH/faktaassistant/rails_app/sljournalism/hyperledger/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{"Args":["registerWallet","client","org1","50", "client2"]}' --waitForEvent )
value
value = %x[ #{cmd} ]
value = %x( echo 'hi' )
output
next
exit
ENV['TESTNET_PATH']
ENV['CORE_PEER_MSPCONFIGPATH']
skip
next
Rails.root.to_s+config.relative_url_root+"/hyperledger/fabric-samples/test-network"
next
help
?
skip
argmnt
      argmnt='{"Args":["addFactcheck","'+ENV['BLOCKCHAIN_ORGID']+'","'+@claim_review.id.to_s+'","'+current_user.id.to_s+'","'+@claim.blockchain_id.to_s+'", "'+assessments[@claim_review.review_verdict]+'","'+request.base_url+config.relative_url_root+'/claims'+@claim.id.to_s+'/claim_reviews/'+@claim_review.id.to_s+'","'+'1","5","'+@claim_review.review_verdict.to_s+'", "'+request.base_url+config.relative_url_root+'/assets/'+@claim_review.review_verdict.to_s+'.png'+'","'+@claim_review.img_review_started.to_s+'","'+@claim_review.img_old.to_s+'","'+@claim_review.img_forensic_discrepency.to_s+'","'+@claim_review.img_metadata_discrepency.to_s+'","'+@claim_review.img_logical_discrepency.to_s+'","'+@claim_review.note_img_old.to_s+'","'+@claim_review.note_img_forensic_discrepency.to_s+'","'+@claim_review.note_img_metadata_discrepency.to_s+'","'+@claim_review.note_img_logical_discrepency.to_s+'","'+@claim_review.vid_review_started.to_s+'"'
      assessments={1=>"False",2=>"Mostly False",3=>"Mixed",4=>"Mostly True",5=>"True"}
argmnt
argmnt='{"Args":["addFactcheck","'+ENV['BLOCKCHAIN_ORGID']+'","'+@claim_review.id.to_s+'","'+current_user.id.to_s+'","'+@claim.blockchain_id.to_s+'", "'+assessments[@claim_review.review_verdict]+'","'+request.base_url+config.relative_url_root+'/claims'+@claim.id.to_s+'/claim_reviews/'+@claim_review.id.to_s+'","'+'1","5","'+@claim_review.review_verdict.to_s+'", "'
      assessments={1=>"False",2=>"Mostly False",3=>"Mixed",4=>"Mostly True",5=>"True"}
argmnt='{"Args":["addFactcheck","'+ENV['BLOCKCHAIN_ORGID']+'","'+@claim_review.id.to_s+'","'+current_user.id.to_s+'","'+@claim.blockchain_id.to_s+'", "'+assessments[@claim_review.review_verdict]+'","'+request.base_url+config.relative_url_root+'/claims'+@claim.id.to_s+'/claim_reviews/'+@claim_review.id.to_s+'","'+'1","5","'+@claim_review.review_verdict.to_s+'", "'
      @claim_review.review_verdict.to_s+'", "'
      '1","5","'+
      request.base_url+config.relative_url_root+'/claims'+@claim.id.to_s+'/claim_reviews/'+@claim_review.id.to_s+'","'+
      assessments[@claim_review.review_verdict]+'","'+
      @claim.blockchain_id.to_s+'", "'+
      current_user.id.to_s+'","'+
      @claim_review.id.to_s+'","'+
      ENV['BLOCKCHAIN_ORGID']+'","'+
      argmnt='{"Args":["addFactcheck","'+
      @claim_review      @claim_review      @claim_review      @claim_review      @claim_review      @claim_review      @claim_review      @claim_review      @claim_review      @claim_review      @claim_review      @claim_review      @claim_review      @claim_review_review.note      @claim_review      @claim_review     _
      @claim_review.not      @claim_review.not      @claim_review.no@cl      @claim_review.not      @claim_review.not      @claim_review.no@cl      @cld_audio_discrepency.to_s+'"      @claim_review.not     e_vid_logical_discrepen      @claim_review.not      @claim_re_r      @claim_review.not      @claim_review.not      @clia      @claim_review.not      @claim_review.not      @insu      @claim_review.not      @claim_review.not      @iew      @claim_review.not      @claim_review._r      @claim_review.not      @claim_review.not      @cw.txt_cr      @claim_review.not      @claim_re      @claim_review.txt_      @claim_review._evidence.to_s+'","'+
      @claim_review.note_vid_old+'","'+
      @claim_review.vid_logical_discrepency.to_s+'","'+
      @claim_review.vid_review_started.      @claim      @claim_review.vid_o      @claim_review.vid_rem_review.vid_forensic_discrepency.to_s+'","      @claim_review.vid_review_startedsc      @claim_review.vid_review_started.      @claim  crepency.to_s+'","'+
      @claim_review.note_img_logical_discrepency.to_s+'","'+
      @claim_review.note_img_metadata_discrepency.to_s+'","'+
      @claim_review.note_img_forensic_discrepency.to_s+'","'+
      @claim_review.note_img_old.to_s+'","'+
      @claim_review.img_logical_discrepency.to_s+'","'+
      @claim_review.img_metadata_discrepency.to_s+'","'+
      @claim_review.img_forensic_discrepency.to_s+'","'+
      @claim_review.img_old.to_s+'","'+
      @claim_review.img_review_started.to_s+'","'+
      request.base_url+config.relative_url_root+'/assets/'+@claim_review.review_verdict.to_s+'.png'+'","'+
      @claim_review.review_verdict.to_s+'", "'+
      '1","5","'+
      request.base_url+config.relative_url_root+'/claims'+@claim.id.to_s+'/claim_reviews/'+@claim_review.id.to_s+'","'+
      assessments[@claim_review.review_verdict]+'","'+
      @claim.blockchain_id.to_s+'", "'+
      current_user.id.to_s+'","'+
      @claim_review.id.to_s+'","'+
      ENV['BLOCKCHAIN_ORGID']+'","'+
argmnt='{"Args":["addFactcheck","'+
next
skip
next
skip
output
next
output
next
skip
next
output
next
skip
next
@claim_review
skip
!@claim_review.review_verdict.blank?
@claim_review.review_verdict
skip
next
skip
output
next
skip
next
skip
exit
next
skip
next
@claim
next@claim
next
@claim
@save_to_blockchain
next
q
next
dskipp
skip
exit
ntex
next
ENV['BLOCKCHAIN_ENABLED'] && params[:blockchain_assessment].present? && current_user.role=="admin"
skip
current_user.role
current_user.role=="factcheck"
params[:claim_review][:add_to_blockchain]=="1"
params[:claim_review][:add_to_blockchain]==1
skip
next
status
next
status
next
headers
next
skip
exit
@user.inspect
@user
next
skip
next
response.pop.inspect
next
response.pop.inspect
next
skip
next
skip
help
finish
claim_params['add_to_blockchain']
claim_params['add_to_blockchain'] && ENV['BLOCKCHAIN_ENABLED'] && current_user.role=="client"
next
skip
finish
help
params[:claim][:url]
next
exit
start_review
next
exit
@user
@user=User.where(id: params[:id]).first
User.where(id: params[:id]).first
params[:id]
@user
next
skip
next
params[:getbalance]
@user
user
next
help
skip
help
?
